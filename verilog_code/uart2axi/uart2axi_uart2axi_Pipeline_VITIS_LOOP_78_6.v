// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module uart2axi_uart2axi_Pipeline_VITIS_LOOP_78_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        axi_temp_V_address0,
        axi_temp_V_ce0,
        axi_temp_V_q0,
        lhs_V,
        burst_len_V
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter4_fsm_state5 = 2'd2;
parameter    ap_ST_iter5_fsm_state6 = 2'd2;
parameter    ap_ST_iter6_fsm_state7 = 2'd2;
parameter    ap_ST_iter7_fsm_state8 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;
parameter    ap_ST_iter4_fsm_state0 = 2'd1;
parameter    ap_ST_iter5_fsm_state0 = 2'd1;
parameter    ap_ST_iter6_fsm_state0 = 2'd1;
parameter    ap_ST_iter7_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [12:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [7:0] axi_temp_V_address0;
output   axi_temp_V_ce0;
input  [31:0] axi_temp_V_q0;
input  [31:0] lhs_V;
input  [7:0] burst_len_V;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_BREADY;
reg axi_temp_V_ce0;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg   [1:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state0;
reg   [1:0] ap_CS_iter5_fsm;
wire    ap_CS_iter5_fsm_state0;
reg   [1:0] ap_CS_iter6_fsm;
wire    ap_CS_iter6_fsm_state0;
reg   [1:0] ap_CS_iter7_fsm;
wire    ap_CS_iter7_fsm_state0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln1027_reg_184;
reg   [0:0] icmp_ln1027_2_reg_188;
reg    ap_predicate_op38_writereq_state2;
reg    ap_block_state2_io;
wire    ap_CS_iter1_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter1_reg;
reg    ap_predicate_op39_write_state3;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_CS_iter3_fsm_state4;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_CS_iter4_fsm_state5;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_CS_iter5_fsm_state6;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_CS_iter6_fsm_state7;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter6_reg;
reg    ap_predicate_op44_writeresp_state8;
reg    ap_block_state8_pp0_stage0_iter7;
wire    ap_CS_iter7_fsm_state8;
wire   [0:0] icmp_ln1027_2_fu_150_p2;
wire   [0:0] icmp_ln1027_fu_125_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_184_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_2_reg_188_pp0_iter5_reg;
reg   [63:0] gmem_addr_reg_197;
reg   [31:0] axi_temp_V_load_reg_203;
wire   [63:0] zext_ln1027_fu_137_p1;
wire   [63:0] zext_ln541_fu_162_p1;
reg   [8:0] j_V_fu_68;
wire   [8:0] add_ln840_fu_131_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_j_V_1;
wire   [7:0] rhs_V_fu_142_p1;
wire   [32:0] zext_ln1027_1_fu_146_p1;
wire   [32:0] lhs_V_cast_fu_113_p1;
wire   [32:0] ret_V_fu_156_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg   [1:0] ap_NS_iter4_fsm;
reg   [1:0] ap_NS_iter5_fsm;
reg   [1:0] ap_NS_iter6_fsm;
reg   [1:0] ap_NS_iter7_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
reg    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
wire    ap_ST_iter3_fsm_state4_blk;
wire    ap_ST_iter4_fsm_state5_blk;
wire    ap_ST_iter5_fsm_state6_blk;
wire    ap_ST_iter6_fsm_state7_blk;
reg    ap_ST_iter7_fsm_state8_blk;
wire    ap_start_int;
reg    ap_condition_434;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_CS_iter4_fsm = 2'd1;
#0 ap_CS_iter5_fsm = 2'd1;
#0 ap_CS_iter6_fsm = 2'd1;
#0 ap_CS_iter7_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

uart2axi_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter5_fsm <= ap_ST_iter5_fsm_state0;
    end else begin
        ap_CS_iter5_fsm <= ap_NS_iter5_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter6_fsm <= ap_ST_iter6_fsm_state0;
    end else begin
        ap_CS_iter6_fsm <= ap_NS_iter6_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter7_fsm <= ap_ST_iter7_fsm_state0;
    end else begin
        ap_CS_iter7_fsm <= ap_NS_iter7_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter7_fsm_state8) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter7_fsm_state8) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter6_fsm_state7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_434)) begin
        if (((icmp_ln1027_fu_125_p2 == 1'd0) & (icmp_ln1027_2_fu_150_p2 == 1'd0))) begin
            j_V_fu_68 <= add_ln840_fu_131_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_V_fu_68 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln1027_reg_184 <= icmp_ln1027_fu_125_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1027_2_reg_188_pp0_iter1_reg <= icmp_ln1027_2_reg_188;
        icmp_ln1027_reg_184_pp0_iter1_reg <= icmp_ln1027_reg_184;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1027_2_reg_188_pp0_iter2_reg <= icmp_ln1027_2_reg_188_pp0_iter1_reg;
        icmp_ln1027_reg_184_pp0_iter2_reg <= icmp_ln1027_reg_184_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln1027_2_reg_188_pp0_iter3_reg <= icmp_ln1027_2_reg_188_pp0_iter2_reg;
        icmp_ln1027_reg_184_pp0_iter3_reg <= icmp_ln1027_reg_184_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        icmp_ln1027_2_reg_188_pp0_iter4_reg <= icmp_ln1027_2_reg_188_pp0_iter3_reg;
        icmp_ln1027_reg_184_pp0_iter4_reg <= icmp_ln1027_reg_184_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter5_fsm_state6))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        icmp_ln1027_2_reg_188_pp0_iter5_reg <= icmp_ln1027_2_reg_188_pp0_iter4_reg;
        icmp_ln1027_reg_184_pp0_iter5_reg <= icmp_ln1027_reg_184_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln1027_2_reg_188 == 1'd0) & (icmp_ln1027_reg_184 == 1'd0))) begin
        axi_temp_V_load_reg_203 <= axi_temp_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln1027_fu_125_p2 == 1'd0) & (icmp_ln1027_2_fu_150_p2 == 1'd0))) begin
        gmem_addr_reg_197[32 : 0] <= zext_ln541_fu_162_p1[32 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln1027_fu_125_p2 == 1'd0))) begin
        icmp_ln1027_2_reg_188 <= icmp_ln1027_2_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter6_fsm_state7))) begin
        icmp_ln1027_2_reg_188_pp0_iter6_reg <= icmp_ln1027_2_reg_188_pp0_iter5_reg;
        icmp_ln1027_reg_184_pp0_iter6_reg <= icmp_ln1027_reg_184_pp0_iter5_reg;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_iter1_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3_io)) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_iter3_fsm_state4_blk = 1'b0;

assign ap_ST_iter4_fsm_state5_blk = 1'b0;

assign ap_ST_iter5_fsm_state6_blk = 1'b0;

assign ap_ST_iter6_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) begin
        ap_ST_iter7_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_iter7_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & ((icmp_ln1027_fu_125_p2 == 1'd1) | (icmp_ln1027_2_fu_150_p2 == 1'd1)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter7_fsm_state8) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter7_fsm_state0) & (1'b1 == ap_CS_iter6_fsm_state0) & (1'b1 == ap_CS_iter5_fsm_state0) & (1'b1 == ap_CS_iter4_fsm_state0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_V_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_j_V_1 = j_V_fu_68;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        axi_temp_V_ce0 = 1'b1;
    end else begin
        axi_temp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter1_fsm_state2) & (ap_predicate_op38_writereq_state2 == 1'b1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op39_write_state3 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2) & (ap_predicate_op38_writereq_state2 == 1'b1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3) & (ap_predicate_op39_write_state3 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & ((1'b0 == ap_CS_iter1_fsm_state2) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter2_fsm_state3) & (1'b0 == ap_block_state3_io))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & ((1'b0 == ap_CS_iter2_fsm_state3) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io))))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state5 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b0 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter5_fsm)
        ap_ST_iter5_fsm_state6 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end else if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b0 == ap_CS_iter4_fsm_state5))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state0;
            end else begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end
        end
        ap_ST_iter5_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state6;
            end else begin
                ap_NS_iter5_fsm = ap_ST_iter5_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter5_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter6_fsm)
        ap_ST_iter6_fsm_state7 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter5_fsm_state6))) begin
                ap_NS_iter6_fsm = ap_ST_iter6_fsm_state7;
            end else if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b0 == ap_CS_iter5_fsm_state6))) begin
                ap_NS_iter6_fsm = ap_ST_iter6_fsm_state0;
            end else begin
                ap_NS_iter6_fsm = ap_ST_iter6_fsm_state7;
            end
        end
        ap_ST_iter6_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter5_fsm_state6))) begin
                ap_NS_iter6_fsm = ap_ST_iter6_fsm_state7;
            end else begin
                ap_NS_iter6_fsm = ap_ST_iter6_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter6_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter7_fsm)
        ap_ST_iter7_fsm_state8 : begin
            if ((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b0 == ap_CS_iter6_fsm_state7))) begin
                ap_NS_iter7_fsm = ap_ST_iter7_fsm_state0;
            end else if (((~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter7_fsm_state8) & ((icmp_ln1027_2_reg_188_pp0_iter6_reg == 1'd1) | (icmp_ln1027_reg_184_pp0_iter6_reg == 1'd1))) | (~((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter6_fsm_state7)))) begin
                ap_NS_iter7_fsm = ap_ST_iter7_fsm_state8;
            end else begin
                ap_NS_iter7_fsm = ap_ST_iter7_fsm_state8;
            end
        end
        ap_ST_iter7_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_iter6_fsm_state7))) begin
                ap_NS_iter7_fsm = ap_ST_iter7_fsm_state8;
            end else begin
                ap_NS_iter7_fsm = ap_ST_iter7_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter7_fsm = 'bx;
        end
    endcase
end

assign add_ln840_fu_131_p2 = (ap_sig_allocacmp_j_V_1 + 9'd1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter4_fsm_state0 = ap_CS_iter4_fsm[32'd0];

assign ap_CS_iter4_fsm_state5 = ap_CS_iter4_fsm[32'd1];

assign ap_CS_iter5_fsm_state0 = ap_CS_iter5_fsm[32'd0];

assign ap_CS_iter5_fsm_state6 = ap_CS_iter5_fsm[32'd1];

assign ap_CS_iter6_fsm_state0 = ap_CS_iter6_fsm[32'd0];

assign ap_CS_iter6_fsm_state7 = ap_CS_iter6_fsm[32'd1];

assign ap_CS_iter7_fsm_state0 = ap_CS_iter7_fsm[32'd0];

assign ap_CS_iter7_fsm_state8 = ap_CS_iter7_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_AWREADY == 1'b0) & (ap_predicate_op38_writereq_state2 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op39_write_state3 == 1'b1) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = ((ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_condition_434 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter7_fsm_state8) & (ap_predicate_op44_writeresp_state8 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & (1'b1 == ap_block_state3_io)) | ((1'b1 == ap_CS_iter1_fsm_state2) & (1'b1 == ap_block_state2_io))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op38_writereq_state2 = ((icmp_ln1027_2_reg_188 == 1'd0) & (icmp_ln1027_reg_184 == 1'd0));
end

always @ (*) begin
    ap_predicate_op39_write_state3 = ((icmp_ln1027_2_reg_188_pp0_iter1_reg == 1'd0) & (icmp_ln1027_reg_184_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op44_writeresp_state8 = ((icmp_ln1027_2_reg_188_pp0_iter6_reg == 1'd0) & (icmp_ln1027_reg_184_pp0_iter6_reg == 1'd0));
end

assign axi_temp_V_address0 = zext_ln1027_fu_137_p1;

assign icmp_ln1027_2_fu_150_p2 = ((burst_len_V < rhs_V_fu_142_p1) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_125_p2 = ((ap_sig_allocacmp_j_V_1 == 9'd256) ? 1'b1 : 1'b0);

assign lhs_V_cast_fu_113_p1 = lhs_V;

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = gmem_addr_reg_197;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = axi_temp_V_load_reg_203;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign ret_V_fu_156_p2 = (zext_ln1027_1_fu_146_p1 + lhs_V_cast_fu_113_p1);

assign rhs_V_fu_142_p1 = ap_sig_allocacmp_j_V_1[7:0];

assign zext_ln1027_1_fu_146_p1 = rhs_V_fu_142_p1;

assign zext_ln1027_fu_137_p1 = ap_sig_allocacmp_j_V_1;

assign zext_ln541_fu_162_p1 = ret_V_fu_156_p2;

always @ (posedge ap_clk) begin
    gmem_addr_reg_197[63:33] <= 31'b0000000000000000000000000000000;
end

endmodule //uart2axi_uart2axi_Pipeline_VITIS_LOOP_78_6
